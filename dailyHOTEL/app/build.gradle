import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'io.fabric'

repositories {
    google()
    jcenter()

    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://devrepo.kakao.com:8088/nexus/content/groups/public/' }
    maven { url "http://appboy.github.io/appboy-android-sdk/sdk" }

    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    defaultConfig {
        applicationId "com.twoheart.dailyhotel"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2020501
        versionName "2.2.5"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "ko"
//        resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
            buildConfigField ("String", "GIT_VERSION", "\"000000000\"")
        }

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            buildConfigField 'com.twoheart.dailyhotel.Setting.Stores', 'RELEASE_STORE', 'com.twoheart.dailyhotel.Setting.Stores.PLAY_STORE'

            def getGitHash = { ->
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'rev-parse', '--short', 'HEAD'
                    standardOutput = stdout
                }

                return stdout.toString().trim()
            }

            buildConfigField ("String", "GIT_VERSION", "\"${getGitHash()}\"")
        }
    }

    flavorDimensions "STORE", "SERVER"

    productFlavors {
        googlePlayStore {
            dimension "STORE"
        }

        oneStore {
            dimension "STORE"
        }

        dev {
            dimension "SERVER"
        }

        stage {
            dimension "SERVER"
        }

        prod {
            dimension "SERVER"
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries false
    }

    applicationVariants.all { variant ->

        if (variant.buildType.name == "release") {

        } else {
            // ./gradlew assembleDebug -Pqa
            if (project.hasProperty('qa') == false) {
                return
            }
        }

        def simpleDateFormat = new SimpleDateFormat("yyMMdd")
        simpleDateFormat.setTimeZone(TimeZone.getDefault())

        def apkName = "DH"
        apkName += "-" + variant.flavorName

//        if (variant.buildType.name == "release") {
//            apkName += "-Prod";
//        } else {
//            apkName += "-Dev";
//        }
//
//        def currentFlavor = variant.flavorName;
//
//        if (currentFlavor.equalsIgnoreCase("googleplaystore") == true) {
//            apkName += "-Play";
//        } else if (currentFlavor.equalsIgnoreCase("onestore") == true) {
//            apkName += "-Tstore";
//        } else {
//            apkName += "-" + variant.flavorName;
//        }

        if (variant.buildType.name == "release") {

        } else {
            if ("$qa" == null || "$qa".length() == 0) {
                apkName += '-QA-00'
            } else {
                apkName += '-QA-' + "$qa"
            }
        }

        apkName += "-v" + defaultConfig.versionCode

        def getGitName = { ->
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'config', 'user.name'
                standardOutput = stdout
            }

            return stdout.toString().trim()
        }

        def gitName = getGitName()

        if (gitName == 'sheldon') {
            apkName += "-Sheldon"
        } else if (gitName == 'android_sam') {
            apkName += "-Sam"
        } else {
            apkName += "-" + gitName
        }

        apkName += "-" + simpleDateFormat.format(new Date())

        def getGitHash = { ->
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'rev-parse', '--short', 'HEAD'
                standardOutput = stdout
            }

            return stdout.toString().trim()
        }

        apkName += "-" + getGitHash()

        apkName += ".apk"

        variant.outputs.all { output ->
            outputFileName = apkName
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    kapt "com.android.databinding:compiler:$android_gradle_version"
    implementation 'androidx.core:core-ktx:0.3'

    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support:animated-vector-drawable:27.1.1'
    implementation 'com.android.support:gridlayout-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "android.arch.lifecycle:extensions:1.+"
    implementation "android.arch.lifecycle:common-java8:1.+"
    implementation 'com.google.android:flexbox:1.0.0'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.10.0'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    implementation 'com.facebook.fresco:fresco:1.9.0'
    implementation 'com.facebook.fresco:imagepipeline-okhttp3:1.9.0'

    implementation 'com.kakao.sdk:usermgmt:1.11.1'
    implementation 'com.kakao.sdk:kakaolink:1.11.1'

    implementation 'com.appboy:android-sdk-ui:2.4.+'

    implementation 'com.adjust.sdk:adjust-android:4.14.0'
    implementation 'com.android.installreferrer:installreferrer:1.0'

    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    implementation 'com.facebook.android:facebook-core:[4,5)'
    implementation 'com.facebook.android:facebook-login:[4,5)'
    implementation 'com.facebook.android:facebook-applinks:[4,5)'

    implementation project(':AndroidMapsUtils')
    implementation project(':androidnumberpicker')
    implementation project(':base')
    // 라이브러리를 빌드하면 항상 release 버전이 되어서..
//    releaseCompile project(path: ':base', configuration: 'release')
//    debugCompile project(path: ':base', configuration: 'debug')

    implementation files('libs/com.skt.Tmap_1.52.jar')
    implementation files('libs/com.facebook.keyframes.aar')

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation 'com.google.android.gms:play-services-base:15.0.1'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-analytics:16.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-config:16.0.0'
    implementation 'com.google.firebase:firebase-perf:16.0.0'
    implementation 'com.google.firebase:firebase-messaging:17.0.0'

    implementation 'com.bluelinelabs:logansquare:1.3.7'
    kapt 'com.bluelinelabs:logansquare-compiler:1.3.7'
    implementation "com.github.aurae.retrofit2:converter-logansquare:1.4.1"

    // 카카오 광고 SDK
    implementation 'com.kakao.ad:tracker:0.2.6@aar'

    //
//    debugCompile 'com.facebook.stetho:stetho:1.4.1'
//    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
//    debugCompile 'com.facebook.stetho:stetho-urlconnection:1.4.1'
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'

    // test dependencies
    androidTestDebugImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestDebugImplementation 'com.android.support.test:runner:1.0.2'
    androidTestDebugImplementation 'com.android.support.test:rules:1.0.2'
    androidTestDebugImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestDebugImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestDebugImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestDebugImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    androidTestDebugImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestDebugImplementation 'org.skyscreamer:jsonassert:1.5.0'
}

apply plugin: 'com.google.gms.google-services'
